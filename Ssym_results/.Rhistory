colnames(sym_Dynamut)=cnames
colnames(sym_DDGun)=cnames
colnames(sym_TherNet)=cnames
colnames(sym_PopMs)=cnames
colnames(sym_ACDCNN)=cnames
fiN = c("KORPM_Pucci2018","Cartddg_Pucci2018_th8","ACDCNN_Pucci2018","FoldX_Pucci2018_th8","Dynamut_Pucci2018","DDGun3D_Pucci2018", "TherNet_Pucci2018","PopMs_Pucci2018","Evo_Pucci2018")
metodos =  c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF")
pl <- list()  # new empty plot list
for (i in 1:length(fiN)) {
file = sprintf("%s_sym.txt", fiN[i])
symchart = sprintf("sym%d",i )
output = sprintf("-> processing %s", metodos[i])
print(output)
# read file
sym <- read.table(file)
#Define de column names
colnames(sym)=cnames
#Plot
symchart<-ggplot(sym, aes(x = Dir, y = Rev)) +
labs( x= "Direct ΔΔG (Kcal/mol)", y="Reverse ΔΔG (Kcal/mol)")+
geom_jitter( stat = "identity" , colour="blue", size = 2) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
geom_abline(slope=-1, intercept=-1, colour ="#b2b2b2",linetype="dashed")+
geom_abline(slope=-1, intercept=1, colour ="#b2b2b2",linetype="dashed")+
geom_abline(slope=-1, intercept=0, colour ="black")+
annotate("text_npc",npcx = 0.9, npcy = 0.95, label = metodos[i] ,size = 6)+
annotate("text_npc",npcx = 0.9, npcy = 0.90, label = corr_eqn(sym$Dir,sym$Rev),size = 6)+
stat_cor( method = "pearson", aes(x = Dir, y = Rev), label.x.npc = 0.6, label.y.npc = 0.90, digits = 2, colour="deepskyblue3",  r.accuracy = NULL)
p1<-ggplot(totaldata, aes(x = REC_TPR, y = PREC_PPV, group = Method, colour =Method)) +
labs(title="Precison-Recall Curves (PRC) Direct", x= "Recall(Sensitivity)", y="Precision(PPV)")+
geom_smooth( stat = "identity", method = "lm" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"), legend.position = "none",plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
prc <- p1 +  geom_smooth(data = KORPMF,  stat = "identity", method = "lm", aes(x = REC_TPR, y = PREC_PPV), color='black', linetype="dotted", size=0.5 )
#merge all df for a unique representation
totaldata <- rbind(KORPM)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
roc1 <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc1)
p1<-ggplot(totaldata, aes(x = REC_TPR, y = PREC_PPV, group = Method, colour =Method)) +
labs(title="Precison-Recall Curves (PRC) Direct", x= "Recall(Sensitivity)", y="Precision(PPV)")+
geom_smooth( stat = "identity", method = "lm" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"), legend.position = "none",plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
prc <- p1 +  geom_smooth(data = KORPMF,  stat = "identity", method = "lm", aes(x = REC_TPR, y = PREC_PPV), color='black', linetype="dotted", size=0.5 )
print(prc1)
#merge all df for a unique representation
totaldata <- rbind(KORPM,CartesianΔΔG,EvoFF,FoldX,Dynamut2,DDGun3D, ThermoNet,PopMusicS,ACDCNN)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
roc1 <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc1)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","ACDCNN"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
roc1 <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc1)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
roc1 <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc1)
PopMusicS<-PopMusicS %>%
mutate(Method = "PopMusicS")
ACDCNN<-ACDCNN %>%
mutate(Method = "ACDCNN")
#merge all df for a unique representation
totaldata <- rbind(KORPM,CartesianΔΔG,EvoFF,FoldX,Dynamut2,DDGun3D, ThermoNet,PopMusicS,ACDCNN)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
roc1 <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc1)
p1<-ggplot(totaldata, aes(x = REC_TPR, y = PREC_PPV, group = Method, colour =Method)) +
labs(title="Precison-Recall Curves (PRC) Direct", x= "Recall(Sensitivity)", y="Precision(PPV)")+
geom_smooth( stat = "identity", method = "lm" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"), legend.position = "none",plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
prc <- p1 +  geom_smooth(data = KORPMF,  stat = "identity", method = "lm", aes(x = REC_TPR, y = PREC_PPV), color='black', linetype="dotted", size=0.5 )
print(prc1)
cnames=c("thrP","REC_TPR","PREC_PPV","FPR","SP","MCC","ACC","ERR","F05","F1","F2","dist2")
KORPM <- read.table(file = "KORPM_Pucci2018dirN_prc.txt")
KORPMF <- read.table(file = "KORPM_Pucci2018dirN_prcB.txt")
CartesianΔΔG <- read.table(file = "Cartddg_Pucci2018dirN_th8_prc.txt")
EvoFF <- read.table(file = "Evo_Pucci2018dirN_prc.txt")
FoldX <- read.table(file = "FoldX_Pucci2018dirN_th8_prc.txt")
Dynamut2 <- read.table(file = "Dynamut_Pucci2018dirN_prc.txt")
DDGun3D <- read.table(file = "DDGun3D_Pucci2018dirN_prc.txt")
ThermoNet <- read.table(file = "TherNet_Pucci2018dirN_prc.txt")
PopMusicS <- read.table(file = "PopMs_Pucci2018dirN_prc.txt")
ACDCNN <- read.table(file = "ACDCNN_Pucci2018dirN_prc.txt")
#Define de column names
colnames(KORPM)=cnames
colnames(KORPMF)=cnames
colnames(CartesianΔΔG)=cnames
colnames(EvoFF)=cnames
colnames(FoldX)=cnames
colnames(Dynamut2)=cnames
colnames(DDGun3D)=cnames
colnames(ThermoNet)=cnames
colnames(PopMusicS)=cnames
colnames(ACDCNN)=cnames
#Add a column with the method (for future distinguish)
KORPM<-KORPM %>%
mutate(Method = "KORPM")
KORPMF<-KORPMF %>%
mutate(Method = "KORPMF")
CartesianΔΔG<-CartesianΔΔG %>%
mutate(Method = "CartesianΔΔG")
EvoFF<-EvoFF %>%
mutate(Method = "EvoFF")
FoldX<-FoldX %>%
mutate(Method = "FoldX")
Dynamut2<-Dynamut2 %>%
mutate(Method = "Dynamut2")
DDGun3D<-DDGun3D %>%
mutate(Method = "DDGun3D")
ThermoNet<-ThermoNet %>%
mutate(Method = "ThermoNet")
PopMusicS<-PopMusicS %>%
mutate(Method = "PopMusicS")
ACDCNN<-ACDCNN %>%
mutate(Method = "ACDCNN")
#merge all df for a unique representation
totaldata <- rbind(KORPM,CartesianΔΔG,EvoFF,FoldX,Dynamut2,DDGun3D, ThermoNet,PopMusicS,ACDCNN)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
roc1 <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc1)
p1<-ggplot(totaldata, aes(x = REC_TPR, y = PREC_PPV, group = Method, colour =Method)) +
labs(title="Precison-Recall Curves (PRC) Direct", x= "Recall(Sensitivity)", y="Precision(PPV)")+
geom_smooth( stat = "identity", method = "lm" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"), legend.position = "none",plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
prc1 <- p1 +  geom_smooth(data = KORPMF,  stat = "identity", method = "lm", aes(x = REC_TPR, y = PREC_PPV), color='black', linetype="dotted", size=0.5 )
print(prc1)
#Import the data and make de DF
cnames=c("thrP","REC_TPR","PREC_PPV","FPR","SP","MCC","ACC","ERR","F05","F1","F2","dist2")
KORPM <- read.table(file = "KORPM_Pucci2018dirN_prc.txt")
KORPMF <- read.table(file = "KORPM_Pucci2018dirN_prcB.txt")
CartesianΔΔG <- read.table(file = "Cartddg_Pucci2018dirN_th8_prc.txt")
EvoFF <- read.table(file = "Evo_Pucci2018dirN_prc.txt")
FoldX <- read.table(file = "FoldX_Pucci2018dirN_th8_prc.txt")
Dynamut2 <- read.table(file = "Dynamut_Pucci2018dirN_prc.txt")
DDGun3D <- read.table(file = "DDGun3D_Pucci2018dirN_prc.txt")
ThermoNet <- read.table(file = "TherNet_Pucci2018dirN_prc.txt")
PopMusicS <- read.table(file = "PopMs_Pucci2018dirN_prc.txt")
ACDCNN <- read.table(file = "ACDCNN_Pucci2018dirN_prc.txt")
#Define de column names
colnames(KORPM)=cnames
colnames(KORPMF)=cnames
colnames(CartesianΔΔG)=cnames
colnames(EvoFF)=cnames
colnames(FoldX)=cnames
colnames(Dynamut2)=cnames
colnames(DDGun3D)=cnames
colnames(ThermoNet)=cnames
colnames(PopMusicS)=cnames
colnames(ACDCNN)=cnames
#Add a column with the method (for future distinguish)
KORPM<-KORPM %>%
mutate(Method = "KORPM")
KORPMF<-KORPMF %>%
mutate(Method = "KORPMF")
CartesianΔΔG<-CartesianΔΔG %>%
mutate(Method = "CartesianΔΔG")
EvoFF<-EvoFF %>%
mutate(Method = "EvoFF")
FoldX<-FoldX %>%
mutate(Method = "FoldX")
Dynamut2<-Dynamut2 %>%
mutate(Method = "Dynamut2")
DDGun3D<-DDGun3D %>%
mutate(Method = "DDGun3D")
ThermoNet<-ThermoNet %>%
mutate(Method = "ThermoNet")
PopMusicS<-PopMusicS %>%
mutate(Method = "PopMusicS")
ACDCNN<-ACDCNN %>%
mutate(Method = "ACDCNN")
#merge all df for a unique representation
totaldata <- rbind(KORPM,CartesianΔΔG,EvoFF,FoldX,Dynamut2,DDGun3D, ThermoNet,PopMusicS,ACDCNN)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Direct", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
# legend.title=element_blank(),  legend.key.size =unit(1, 'cm'), legend.justification=c(0.5,0.6), legend.position =  c(0.85, 0.50),
#legend.title=element_blank(), legend.position =  "right",
legend.position = "none",
plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
roc1 <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc1)
p1<-ggplot(totaldata, aes(x = REC_TPR, y = PREC_PPV, group = Method, colour =Method)) +
labs(title="Precison-Recall Curves (PRC) Direct", x= "Recall(Sensitivity)", y="Precision(PPV)")+
geom_smooth( stat = "identity", method = "lm" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"), legend.position = "none",plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)))
print(roc1)
setwd("~/korpm/R2/Ssym_results")
#Import the data and make de DF
cnames=c("thrP","REC_TPR","PREC_PPV","FPR","SP","MCC","ACC","ERR","F05","F1","F2","dist2")
KORPM <- read.table(file = "KORPM_Pucci2018N_prc.txt")
KORPMF <- read.table(file = "KORPM_Pucci2018N_prcB.txt")
CartesianΔΔG <- read.table(file = "Cartddg_Pucci2018N_th8_prc.txt")
EvoFF <- read.table(file = "Evo_Pucci2018N_prc.txt")
FoldX <- read.table(file = "FoldX_Pucci2018N_th8_prc.txt")
Dynamut2 <- read.table(file = "Dynamut_Pucci2018N_prc.txt")
DDGun3D <- read.table(file = "DDGun3D_Pucci2018N_prc.txt")
ThermoNet <- read.table(file = "TherNet_Pucci2018N_prc.txt")
PopMusicS <- read.table(file = "PopMs_Pucci2018N_prc.txt")
ACDCNN <- read.table(file = "ACDCNN_Pucci2018N_prc.txt")
#Define de column names
colnames(KORPM)=cnames
colnames(KORPMF)=cnames
colnames(CartesianΔΔG)=cnames
colnames(EvoFF)=cnames
colnames(FoldX)=cnames
colnames(Dynamut2)=cnames
colnames(DDGun3D)=cnames
colnames(ThermoNet)=cnames
colnames(PopMusicS)=cnames
colnames(ACDCNN)=cnames
#Add a column with the method (for future distinguish)
KORPM<-KORPM %>%
mutate(Method = "KORPM")
KORPMF<-KORPMF %>%
mutate(Method = "KORPMF")
CartesianΔΔG<-CartesianΔΔG %>%
mutate(Method = "CartesianΔΔG")
EvoFF<-EvoFF %>%
mutate(Method = "EvoFF")
FoldX<-FoldX %>%
mutate(Method = "FoldX")
Dynamut2<-Dynamut2 %>%
mutate(Method = "Dynamut2")
DDGun3D<-DDGun3D %>%
mutate(Method = "DDGun3D")
ThermoNet<-ThermoNet %>%
mutate(Method = "ThermoNet")
PopMusicS<-PopMusicS %>%
mutate(Method = "PopMusicS")
ACDCNN<-ACDCNN %>%
mutate(Method = "ACDCNN")
#merge all df for a unique representation
totaldata <- rbind(KORPM,CartesianΔΔG,EvoFF,FoldX,Dynamut2,DDGun3D, ThermoNet,PopMusicS,ACDCNN)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Symmetric", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
#  scale_color_brewer(type="seq", palette="Accent")+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
legend.position =  c(0.85, 0.40), legend.title=element_blank(),
plot.title= element_blank(),
#legend.title=element_blank(), legend.position =  "top", legend.position =  c(0.0, 1.0),
#legend.position = "none",
#plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)))
#p3 <- roc +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='#A6CEE3', linetype="dashed", size=1 )
roc <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc)
gc()
###########################################################
###########################################################
###########################################################
#     RESULTS PUCCI BENCHMARK
#####################*****######################################
###########################################################
###########################################################
setwd("~/korpm/korpm/Ssym_results")
setwd("~/Google Drive/DRAFTS/KORPM/FIGS/Ssym_results")
setwd("~/korpm/R2/Ssym_results")
#Import the data and make de DF
cnames=c("thrP","REC_TPR","PREC_PPV","FPR","SP","MCC","ACC","ERR","F05","F1","F2","dist2")
KORPM <- read.table(file = "KORPM_Pucci2018N_prc.txt")
KORPMF <- read.table(file = "KORPM_Pucci2018N_prcB.txt")
CartesianΔΔG <- read.table(file = "Cartddg_Pucci2018N_th8_prc.txt")
EvoFF <- read.table(file = "Evo_Pucci2018N_prc.txt")
FoldX <- read.table(file = "FoldX_Pucci2018N_th8_prc.txt")
Dynamut2 <- read.table(file = "Dynamut_Pucci2018N_prc.txt")
DDGun3D <- read.table(file = "DDGun3D_Pucci2018N_prc.txt")
ThermoNet <- read.table(file = "TherNet_Pucci2018N_prc.txt")
PopMusicS <- read.table(file = "PopMs_Pucci2018N_prc.txt")
ACDCNN <- read.table(file = "ACDCNN_Pucci2018N_prc.txt")
#Define de column names
colnames(KORPM)=cnames
colnames(KORPMF)=cnames
colnames(CartesianΔΔG)=cnames
colnames(EvoFF)=cnames
colnames(FoldX)=cnames
colnames(Dynamut2)=cnames
colnames(DDGun3D)=cnames
colnames(ThermoNet)=cnames
colnames(PopMusicS)=cnames
colnames(ACDCNN)=cnames
#Add a column with the method (for future distinguish)
KORPM<-KORPM %>%
mutate(Method = "KORPM")
KORPMF<-KORPMF %>%
mutate(Method = "KORPMF")
CartesianΔΔG<-CartesianΔΔG %>%
mutate(Method = "CartesianΔΔG")
EvoFF<-EvoFF %>%
mutate(Method = "EvoFF")
FoldX<-FoldX %>%
mutate(Method = "FoldX")
Dynamut2<-Dynamut2 %>%
mutate(Method = "Dynamut2")
DDGun3D<-DDGun3D %>%
mutate(Method = "DDGun3D")
ThermoNet<-ThermoNet %>%
mutate(Method = "ThermoNet")
PopMusicS<-PopMusicS %>%
mutate(Method = "PopMusicS")
ACDCNN<-ACDCNN %>%
mutate(Method = "ACDCNN")
#merge all df for a unique representation
totaldata <- rbind(KORPM,CartesianΔΔG,EvoFF,FoldX,Dynamut2,DDGun3D, ThermoNet,PopMusicS,ACDCNN)
p1<-ggplot(totaldata, aes(x = FPR, y = REC_TPR, group = Method, colour =Method)) +
labs(title="ROC Symmetric", x="1-Specificity (FP rate)", y= "Sensitivity (TP rate)")+
geom_smooth( stat = "identity" ) +
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
expand_limits(x=c(0,1), y=c(0, 1))+
#  scale_color_brewer(type="seq", palette="Accent")+
scale_color_brewer(type="seq", palette="Paired", limits = c("KORPM","CartesianΔΔG","ACDCNN","FoldX","Dynamut2","DDGun3D", "ThermoNet","PopMusicS", "EvoFF"))+
geom_abline(slope=1, intercept=0, colour ="grey")+
theme_bw()+
theme(plot.margin = unit(c(20, 20, 10, 10), "pt"),
legend.position =  c(0.85, 0.40), legend.title=element_blank(),
plot.title= element_blank(),
#legend.title=element_blank(), legend.position =  "top", legend.position =  c(0.0, 1.0),
#legend.position = "none",
#plot.title = element_text(hjust=0.5,size =12, face="bold"),
axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)))
#p3 <- roc +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='#A6CEE3', linetype="dashed", size=1 )
roc <- p1 +  geom_line(data = KORPMF, aes(x = FPR, y = REC_TPR), color='black', linetype="dotted", size=0.5 )
print(roc)
